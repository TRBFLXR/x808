// Calculate View Ray
vec3 calcLightViewRay(vec2 screenUV, mat4 viewrayMatrix) {
  return normalize((viewrayMatrix * vec4(screenUV * 2.0 - 1.0, 1.0, 1.0)).xyz);
}

// Calculate Position
vec3 calcWorldPosition(float depth, vec3 viewRay, vec3 camPosition) {
  viewRay = normalize(viewRay);
  return viewRay * depth - camPosition;
}

vec3 calcViewPosition(float depth, vec3 viewRay, vec3 camPosition, mat4 viewMatrix) {
  vec3 worldPosition = calcWorldPosition(depth, viewRay, camPosition);
  return (viewMatrix * vec4(worldPosition, 1.0)).xyz;
}
